{"ast":null,"code":"var _jsxFileName = \"/Users/nickboyd/Documents/cs/cs452/nba-lineup-grader/src/Info.js\";\nimport React from \"react\";\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Info = _ref => {\n  let {\n    avgPPG,\n    avgRPG,\n    avgAPG,\n    avgTO,\n    totPPG,\n    totRPG,\n    totAPG,\n    totTO,\n    avgFG,\n    avgThree,\n    avgFree,\n    grade\n  } = _ref;\n  let h1ClassName = \"\"; // Define an empty string for the h1 className\n\n  // Use a switch statement to set the className based on the grade value\n  switch (grade) {\n    case \"A+\":\n      h1ClassName = \"grade-a\";\n      break;\n    case \"A-\":\n      h1ClassName = \"grade-a\";\n      break;\n    case \"A-\":\n      h1ClassName = \"grade-a\";\n      break;\n    case \"B\":\n      h1ClassName = \"grade-b\";\n      break;\n    case \"C\":\n      h1ClassName = \"grade-c\";\n      break;\n    default:\n      h1ClassName = \"grade-default\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        avgPPG: avgPPG,\n        avgRPG: avgRPG,\n        avgAPG: avgAPG,\n        avgTO: avgTO,\n        totPPG: totPPG,\n        totRPG: totRPG,\n        totAPG: totAPG,\n        totTO: totTO,\n        avgFG: avgFG,\n        avgThree: avgThree,\n        avgFree: avgFree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"grade\",\n        children: grade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Info","_ref","avgPPG","avgRPG","avgAPG","avgTO","totPPG","totRPG","totAPG","totTO","avgFG","avgThree","avgFree","grade","h1ClassName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nickboyd/Documents/cs/cs452/nba-lineup-grader/src/Info.js"],"sourcesContent":["import React from \"react\";\nimport Table from \"./Table\";\n\nconst Info = ({\n  avgPPG,\n  avgRPG,\n  avgAPG,\n  avgTO,\n  totPPG,\n  totRPG,\n  totAPG,\n  totTO,\n  avgFG,\n  avgThree,\n  avgFree,\n  grade,\n}) => {\n  let h1ClassName = \"\"; // Define an empty string for the h1 className\n\n  // Use a switch statement to set the className based on the grade value\n  switch (grade) {\n    case \"A+\":\n      h1ClassName = \"grade-a\";\n      break;\n    case \"A-\":\n      h1ClassName = \"grade-a\";\n      break;\n    case \"A-\":\n      h1ClassName = \"grade-a\";\n      break;\n    case \"B\":\n      h1ClassName = \"grade-b\";\n      break;\n    case \"C\":\n      h1ClassName = \"grade-c\";\n      break;\n    default:\n      h1ClassName = \"grade-default\";\n  }\n  return (\n    <div className=\"info\">\n      <div className=\"left\">\n        <Table\n          avgPPG={avgPPG}\n          avgRPG={avgRPG}\n          avgAPG={avgAPG}\n          avgTO={avgTO}\n          totPPG={totPPG}\n          totRPG={totRPG}\n          totAPG={totAPG}\n          totTO={totTO}\n          avgFG={avgFG}\n          avgThree={avgThree}\n          avgFree={avgFree}\n        />\n      </div>\n      <div className=\"right\">\n        <h1 className=\"grade\">{grade}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGC,IAAA,IAaP;EAAA,IAbQ;IACZC,MAAM;IACNC,MAAM;IACNC,MAAM;IACNC,KAAK;IACLC,MAAM;IACNC,MAAM;IACNC,MAAM;IACNC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC;EACF,CAAC,GAAAZ,IAAA;EACC,IAAIa,WAAW,GAAG,EAAE,CAAC,CAAC;;EAEtB;EACA,QAAQD,KAAK;IACX,KAAK,IAAI;MACPC,WAAW,GAAG,SAAS;MACvB;IACF,KAAK,IAAI;MACPA,WAAW,GAAG,SAAS;MACvB;IACF,KAAK,IAAI;MACPA,WAAW,GAAG,SAAS;MACvB;IACF,KAAK,GAAG;MACNA,WAAW,GAAG,SAAS;MACvB;IACF,KAAK,GAAG;MACNA,WAAW,GAAG,SAAS;MACvB;IACF;MACEA,WAAW,GAAG,eAAe;EAAC;EAElC,oBACEf,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBjB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBjB,OAAA,CAACF,KAAK;QACJK,MAAM,EAAEA,MAAO;QACfC,MAAM,EAAEA,MAAO;QACfC,MAAM,EAAEA,MAAO;QACfC,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEA,MAAO;QACfC,MAAM,EAAEA,MAAO;QACfC,MAAM,EAAEA,MAAO;QACfC,KAAK,EAAEA,KAAM;QACbC,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA,QAAS;QACnBC,OAAO,EAAEA;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNrB,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBjB,OAAA;QAAIgB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACC,EAAA,GA1DIrB,IAAI;AA4DV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}